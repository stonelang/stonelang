#ifndef EXPR
#define EXPR(Id, Parent)
#endif

#ifndef EXPR_RANGE
#define EXPR_RANGE(Id, First, Last)
#endif

#ifndef LAST_EXPR
#define LAST_EXPR(Id)
#endif

//= Core expression kinds =//
EXPR(New,             Expr)
EXPR(This,            Expr)
EXPR(Call,            Expr)
EXPR(Paren,           Expr)

//= Literal expressions =//
EXPR(NullLiteral,     Expr)
EXPR(BooleanLiteral,  Expr)
EXPR(StringLiteral,   Expr)
EXPR(IntegerLiteral,  Expr)
EXPR(FloatLiteral,    Expr)
EXPR_RANGE(LiteralExpr, NullLiteral, FloatLiteral)

//= Contextual expression (closure) =//
EXPR(Closure,         Expr)
EXPR_RANGE(ContextualExpr, Closure, Closure)

//= Other expressions =//
EXPR(IfSemi,          Expr)
EXPR(CodeCompletion,  Expr)
EXPR(Type,            Expr)
LAST_EXPR(Type)

#undef EXPR_RANGE
#undef EXPR
#undef LAST_EXPR
